{"ast":null,"code":"// Servicio API para consumir el backend\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000';\nexport async function fetchGalleries() {\n  const res = await fetch(`${API_URL}/galleries`);\n  if (!res.ok) throw new Error('Error al obtener galerías');\n  return res.json();\n}\nexport async function createGallery(data) {\n  const res = await fetch(`${API_URL}/galleries`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error('Error al crear galería');\n  return res.json();\n}\nexport async function fetchGalleryById(id) {\n  const res = await fetch(`${API_URL}/galleries/id/${id}`);\n  if (!res.ok) throw new Error('Error al obtener galería');\n  return res.json();\n}\nexport async function uploadPhotos({\n  galleryId,\n  owner,\n  files\n}) {\n  const formData = new FormData();\n  formData.append('galleryId', galleryId);\n  formData.append('owner', owner);\n  for (const file of files) {\n    formData.append('photos', file);\n  }\n  const res = await fetch(`${API_URL}/photos/upload-multiple`, {\n    method: 'POST',\n    body: formData\n  });\n  if (!res.ok) throw new Error('Error al subir fotos');\n  return res.json();\n}\nexport async function deletePhoto(photoId) {\n  const res = await fetch(`${API_URL}/photos/${photoId}`, {\n    method: 'DELETE'\n  });\n  if (!res.ok) throw new Error('Error al eliminar foto');\n  return res.json();\n}","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","fetchGalleries","res","fetch","ok","Error","json","createGallery","data","method","headers","body","JSON","stringify","fetchGalleryById","id","uploadPhotos","galleryId","owner","files","formData","FormData","append","file","deletePhoto","photoId"],"sources":["C:/Users/elmer/Escritorio/Proyectos Desarrollo Web/Pixieset_Personalizado_Edgar/frontend/src/services/api.js"],"sourcesContent":["// Servicio API para consumir el backend\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n\nexport async function fetchGalleries() {\n  const res = await fetch(`${API_URL}/galleries`);\n  if (!res.ok) throw new Error('Error al obtener galerías');\n  return res.json();\n}\n\nexport async function createGallery(data) {\n  const res = await fetch(`${API_URL}/galleries`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n  if (!res.ok) throw new Error('Error al crear galería');\n  return res.json();\n}\n\nexport async function fetchGalleryById(id) {\n  const res = await fetch(`${API_URL}/galleries/id/${id}`);\n  if (!res.ok) throw new Error('Error al obtener galería');\n  return res.json();\n}\n\nexport async function uploadPhotos({ galleryId, owner, files }) {\n  const formData = new FormData();\n  formData.append('galleryId', galleryId);\n  formData.append('owner', owner);\n  for (const file of files) {\n    formData.append('photos', file);\n  }\n  const res = await fetch(`${API_URL}/photos/upload-multiple`, {\n    method: 'POST',\n    body: formData,\n  });\n  if (!res.ok) throw new Error('Error al subir fotos');\n  return res.json();\n}\n\nexport async function deletePhoto(photoId) {\n  const res = await fetch(`${API_URL}/photos/${photoId}`, {\n    method: 'DELETE',\n  });\n  if (!res.ok) throw new Error('Error al eliminar foto');\n  return res.json();\n}\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,OAAO,eAAeC,cAAcA,CAAA,EAAG;EACrC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,YAAY,CAAC;EAC/C,IAAI,CAACK,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EACzD,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,aAAaA,CAACC,IAAI,EAAE;EACxC,MAAMN,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,YAAY,EAAE;IAC9CY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACN,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeQ,gBAAgBA,CAACC,EAAE,EAAE;EACzC,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,iBAAiBkB,EAAE,EAAE,CAAC;EACxD,IAAI,CAACb,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxD,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeU,YAAYA,CAAC;EAAEC,SAAS;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EAC9D,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEL,SAAS,CAAC;EACvCG,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;EAC/B,KAAK,MAAMK,IAAI,IAAIJ,KAAK,EAAE;IACxBC,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEC,IAAI,CAAC;EACjC;EACA,MAAMrB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,yBAAyB,EAAE;IAC3DY,MAAM,EAAE,MAAM;IACdE,IAAI,EAAES;EACR,CAAC,CAAC;EACF,IAAI,CAAClB,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACpD,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAekB,WAAWA,CAACC,OAAO,EAAE;EACzC,MAAMvB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,WAAW4B,OAAO,EAAE,EAAE;IACtDhB,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACP,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}